{"version":3,"file":"static/js/385.e79ec94d.chunk.js","mappings":"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","sources":["components/DocumentUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst DocumentUpload = ({ onUpload }) => {\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === 'dragenter' || e.type === 'dragover') {\r\n      setDragActive(true);\r\n    } else if (e.type === 'dragleave') {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      handleFiles(e.dataTransfer.files);\r\n    }\r\n  };\r\n\r\n  const handleFileInput = (e) => {\r\n    if (e.target.files) {\r\n      handleFiles(e.target.files);\r\n    }\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    setUploading(true);\r\n    \r\n    // Simulate file processing\r\n    setTimeout(() => {\r\n      const newFiles = Array.from(files).map((file, index) => ({\r\n        id: Date.now() + index,\r\n        name: file.name,\r\n        type: getFileType(file.name),\r\n        size: formatFileSize(file.size),\r\n        date: new Date().toISOString().slice(0, 10),\r\n        status: 'uploaded',\r\n        icon: getFileIcon(file.name)\r\n      }));\r\n      \r\n      setUploadedFiles(prev => [...prev, ...newFiles]);\r\n      setUploading(false);\r\n      \r\n      // Notify parent component\r\n      if (onUpload) {\r\n        onUpload(newFiles);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const getFileType = (filename) => {\r\n    const ext = filename.split('.').pop().toLowerCase();\r\n    const types = {\r\n      'pdf': 'Document',\r\n      'doc': 'Document',\r\n      'docx': 'Document',\r\n      'jpg': 'Imaging',\r\n      'jpeg': 'Imaging',\r\n      'png': 'Imaging',\r\n      'dcm': 'DICOM',\r\n      'txt': 'Notes',\r\n      'xlsx': 'Spreadsheet',\r\n      'csv': 'Data'\r\n    };\r\n    return types[ext] || 'Other';\r\n  };\r\n\r\n  const getFileIcon = (filename) => {\r\n    const ext = filename.split('.').pop().toLowerCase();\r\n    const icons = {\r\n      'pdf': '📄',\r\n      'doc': '📝',\r\n      'docx': '📝',\r\n      'jpg': '🖼️',\r\n      'jpeg': '🖼️',\r\n      'png': '🖼️',\r\n      'dcm': '🏥',\r\n      'txt': '📋',\r\n      'xlsx': '📊',\r\n      'csv': '📈'\r\n    };\r\n    return icons[ext] || '📁';\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const removeFile = (fileId) => {\r\n    setUploadedFiles(prev => prev.filter(f => f.id !== fileId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white pb-24 max-w-mobile mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"px-4 py-4\">\r\n        <h1 className=\"text-lg font-semibold text-gray-900\">Upload Documents</h1>\r\n        <p className=\"text-xs text-gray-500 mt-1\">Upload your health records and medical documents</p>\r\n      </div>\r\n\r\n      {/* Upload Area */}\r\n      <div className=\"px-4 mb-4\">\r\n        <div\r\n          className={`border-2 border-dashed rounded-xl p-6 text-center transition-colors ${\r\n            dragActive \r\n              ? 'border-blue-500 bg-blue-50' \r\n              : 'border-gray-300 hover:border-gray-400'\r\n          }`}\r\n          onDragEnter={handleDrag}\r\n          onDragLeave={handleDrag}\r\n          onDragOver={handleDrag}\r\n          onDrop={handleDrop}\r\n        >\r\n          <div className=\"space-y-3\">\r\n            <div className=\"text-4xl\">📁</div>\r\n            <div>\r\n              <h3 className=\"font-medium text-gray-900 text-sm\">Drop files here</h3>\r\n              <p className=\"text-xs text-gray-600\">or click to browse</p>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              multiple\r\n              accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.dcm,.txt,.xlsx,.csv\"\r\n              onChange={handleFileInput}\r\n              className=\"hidden\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label\r\n              htmlFor=\"file-upload\"\r\n              className=\"inline-block bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors cursor-pointer\"\r\n            >\r\n              Choose Files\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Supported Formats */}\r\n      <div className=\"px-4 mb-4\">\r\n        <div className=\"bg-gray-50 rounded-lg p-3\">\r\n          <h4 className=\"font-medium text-gray-900 text-sm mb-2\">Supported Formats</h4>\r\n          <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-600\">\r\n            <div>📄 PDF Documents</div>\r\n            <div>🖼️ Images (JPG, PNG)</div>\r\n            <div>📝 Word Documents</div>\r\n            <div>🏥 DICOM Files</div>\r\n            <div>📊 Excel Files</div>\r\n            <div>📋 Text Files</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Upload Progress */}\r\n      {uploading && (\r\n        <div className=\"px-4 mb-4\">\r\n          <div className=\"bg-blue-50 rounded-lg p-3\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\r\n              <span className=\"text-sm text-blue-700\">Processing files...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Uploaded Files */}\r\n      {uploadedFiles.length > 0 && (\r\n        <div className=\"px-4\">\r\n          <h2 className=\"text-base font-medium text-gray-900 mb-3\">Uploaded Files</h2>\r\n          <div className=\"space-y-2\">\r\n            <AnimatePresence>\r\n              {uploadedFiles.map((file) => (\r\n                <motion.div\r\n                  key={file.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  exit={{ opacity: 0, y: -20 }}\r\n                  className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <span className=\"text-lg\">{file.icon}</span>\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 text-sm\">{file.name}</p>\r\n                      <p className=\"text-xs text-gray-600\">{file.type} • {file.size}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className=\"text-[10px] px-2 py-1 rounded bg-green-100 text-green-600\">\r\n                      {file.status}\r\n                    </span>\r\n                    <button\r\n                      onClick={() => removeFile(file.id)}\r\n                      className=\"text-red-600 hover:text-red-800 text-xs\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </AnimatePresence>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Healthcare Provider Integration */}\r\n      <div className=\"px-4 mt-6\">\r\n        <div className=\"bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-4\">\r\n          <h3 className=\"font-medium text-gray-900 text-sm mb-2\">Connect Healthcare Provider</h3>\r\n          <p className=\"text-xs text-gray-600 mb-3\">\r\n            Automatically retrieve your medical records from your healthcare providers\r\n          </p>\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            <button className=\"bg-green-600 text-white py-2 px-3 rounded-lg text-xs font-medium hover:bg-green-700 transition-colors\">\r\n              🏥 Connect Provider\r\n            </button>\r\n            <button className=\"bg-blue-600 text-white py-2 px-3 rounded-lg text-xs font-medium hover:bg-blue-700 transition-colors\">\r\n              📱 Sync Mobile App\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocumentUpload;\r\n"],"names":["_ref","onUpload","dragActive","setDragActive","useState","uploadedFiles","setUploadedFiles","uploading","setUploading","handleDrag","e","preventDefault","stopPropagation","type","handleFiles","files","setTimeout","newFiles","Array","from","map","file","index","id","Date","now","name","getFileType","size","formatFileSize","date","toISOString","slice","status","icon","getFileIcon","prev","filename","split","pop","toLowerCase","bytes","i","Math","floor","log","parseFloat","pow","toFixed","_jsxs","className","children","_jsx","concat","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","multiple","accept","onChange","target","htmlFor","length","AnimatePresence","motion","div","initial","opacity","y","animate","exit","onClick","removeFile","fileId","filter","f"],"sourceRoot":""}
{"version":3,"file":"static/js/141.9aab8af9.chunk.js","mappings":"iLAGA,MAiVA,EAjVyBA,IAA2B,IAA1B,iBAAEC,GAAkBD,EAC5C,MAAOE,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,OAClDC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IACtCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAC3CK,UAAW,GACXC,SAAU,IACVC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,MACRC,UAAW,GACXC,WAAY,CAAEC,SAAS,EAAMC,KAAK,EAAMC,OAAO,GAC/CC,OAAQ,OAEHC,EAAQC,IAAajB,EAAAA,EAAAA,UAAS,CAAC,GAChCkB,GAAgBC,EAAAA,EAAAA,QAAO,OACtBC,EAAOC,IAAYrB,EAAAA,EAAAA,UAAS,KAC5BsB,EAAUC,IAAevB,EAAAA,EAAAA,UAAS,QAClCwB,EAAQC,IAAazB,EAAAA,EAAAA,UAAS,aAErC0B,EAAAA,EAAAA,WAAU,KACJzB,GAAciB,EAAcS,SAC9BT,EAAcS,QAAQC,SAEvB,CAAC3B,IAEJ,MAYM4B,EAAW,CACf,CACEC,GAAI,EACJC,KAAM,mBACNzB,SAAU,IACV0B,MAAO,KACPC,YAAa,6DACbX,SAAU,kBACVY,KAAM,sBAER,CACEJ,GAAI,EACJC,KAAM,qBACNzB,SAAU,IACV0B,MAAO,KACPC,YAAa,qDACbX,SAAU,iBACVY,KAAM,gBAER,CACEJ,GAAI,EACJC,KAAM,gBACNzB,SAAU,IACV0B,MAAO,KACPC,YAAa,+CACbX,SAAU,WACVY,KAAM,iBAIJC,GAAkBC,EAAAA,EAAAA,SAAQ,KAC9B,IAAIC,EAAOR,EAEX,GADiB,QAAbP,IAAoBe,EAAOA,EAAKC,OAAOC,GAAKA,EAAEjB,WAAaA,IAC3DF,EAAMoB,OAAQ,CAChB,MAAMC,EAAIrB,EAAMsB,cAChBL,EAAOA,EAAKC,OAAOC,GAAKA,EAAER,KAAKW,cAAcC,SAASF,IAAMF,EAAEjB,SAASoB,cAAcC,SAASF,GAChG,CAMA,OALAJ,EAAO,IAAIA,GAAMO,KAAK,CAACC,EAAEC,IACR,aAAXtB,EAA8BsB,EAAExC,SAAWuC,EAAEvC,SAClC,UAAXkB,EAA2BsB,EAAEd,MAAQa,EAAEb,MACpC,GAEFK,GACN,CAACjB,EAAOE,EAAUE,IAafuB,EAAef,GACZ,IAAIgB,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOtB,GAGZ,OACEuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAkDC,SAAA,EAE/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sCAAqCC,SAAC,iBACpDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,0DAK5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYN,MAAO,CAAES,SAAU,SAAUC,IAAK,GAAIC,OAAQ,GAAIC,WAAY,QAASC,UAAW,4BAA6BN,SAAA,EACxIC,EAAAA,EAAAA,KAAA,SACEM,MAAO5C,EACP6C,SAAWC,IAAM7C,EAAS6C,EAAEC,OAAOH,QACnCI,YAAY,wBACZZ,UAAU,6HAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,CA9F5C,CAAC,MAAO,kBAAmB,iBAAkB,YA+F5CY,IAAIC,IACdZ,EAAAA,EAAAA,KAAA,UAAkBa,QAASA,IAAIhD,EAAY+C,GAAMd,UAAS,qBAAAgB,OAAuBlD,IAAWgD,EAAI,4BAA4B,6BAA8Bb,SAAEa,GAA/IA,KAEff,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,UAChCF,EAAAA,EAAAA,MAAA,UAAQS,MAAOxC,EAAQyC,SAAWC,GAAIzC,EAAUyC,EAAEC,OAAOH,OAAQR,UAAU,gCAA+BC,SAAA,EACxGC,EAAAA,EAAAA,KAAA,UAAQM,MAAM,WAAUP,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQM,MAAM,QAAOP,SAAC,oBAI5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,CAAEtB,EAAgBsC,OAAO,mBAI1Ef,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,CACI,IAA3BtB,EAAgBsC,SACflB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6EAA4EC,SAAA,EACzFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAC,kBAC/BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,qCAC1CC,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAIrE,GAAc,GAAOsD,UAAU,sDAAqDC,SAAC,6BAG7GtB,EAAgBkC,IAAI,CAACK,EAASC,KAC7BpB,EAAAA,EAAAA,MAAA,OAEEC,UAAU,6DAA4DC,SAAA,EAEtEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sBAAqBC,SAAEiB,EAAQxC,QAC/CqB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA2BC,SAAEiB,EAAQ3C,QAClDwB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wBAAuBC,SAAA,CAAEiB,EAAQpE,SAASsE,iBAAiB,gBACxElB,EAAAA,EAAAA,KAAA,QAAMF,UAAU,iEAAgEC,SAAEiB,EAAQpD,cAE3FoD,EAAQzC,cACPyB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAEiB,EAAQzC,qBAIrDsB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,sCAAqCC,SAAEV,EAAY2B,EAAQ1C,UAC3E0B,EAAAA,EAAAA,KAAA,UACEa,QAASA,IAnFCG,KAC5B3E,EAAoB2E,IAkFaG,CAAqBH,GACpClB,UAAU,0EAAyEC,SACpF,aAGDC,EAAAA,EAAAA,KAAA,UACEa,QAASA,IAAsB,OAAhB1E,QAAgB,IAAhBA,OAAgB,EAAhBA,GAAgBiF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQJ,GAAO,IAAE1C,MAAO,MACvDwB,UAAU,6EAA4EC,SACvF,0BA3BFiB,EAAQ5C,WAqCrB4B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SAAC,6BAC1CC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAC,yDAEvCC,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAIrE,GAAc,GAAOsD,UAAU,sDAAqDC,SAAC,2BAOhHC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CAAAtB,SACb3D,IACC4D,EAAAA,EAAAA,KAACsB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB3B,UAAU,sEACVe,QAASA,IAAMxE,EAAoB,MAAM0D,UAEzCC,EAAAA,EAAAA,KAACsB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEI,MAAO,GAAKH,QAAS,GAChCC,QAAS,CAAEE,MAAO,EAAGH,QAAS,GAC9BE,KAAM,CAAEC,MAAO,GAAKH,QAAS,GAC7B3B,UAAU,2CACVe,QAAUL,GAAMA,EAAEqB,kBAAkB9B,UAEpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wFAAuFC,UACpGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,WAAUC,SAAE3D,EAAiBoC,UAE/CwB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,qBACrDF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,qBAAoBC,SAAA,CAAC,gCACJC,EAAAA,EAAAA,KAAA,UAAAD,SAAS3D,EAAiBiC,OAAc,QAAMgB,EAAYjD,EAAiBkC,OAAO,QAEhH0B,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,qFAI1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAACsB,EAAAA,EAAOQ,OAAM,CACZC,SAAU,CAAEH,MAAO,KACnBf,QAASA,IAAMxE,EAAoB,MACnCyD,UAAU,kHAAiHC,SAC5H,YAGDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAOQ,OAAM,CACZC,SAAU,CAAEH,MAAO,KACnBf,QArJWmB,KACvB5F,IACc,OAAhBD,QAAgB,IAAhBA,GAAAA,EAAmBC,IAErBC,EAAoB,OAkJJyD,UAAU,uGAAsGC,SACjH,gCAWbC,EAAAA,EAAAA,KAACqB,EAAAA,EAAe,CAAAtB,SACbxD,IACCyD,EAAAA,EAAAA,KAACsB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB3B,UAAU,sEACVe,QAASA,IAAIrE,GAAc,GAC3ByF,KAAK,SAAS,aAAW,OAAMlC,UAE/BF,EAAAA,EAAAA,MAACyB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEU,EAAG,GAAIT,QAAS,GAC3BC,QAAS,CAAEQ,EAAG,EAAGT,QAAS,GAC1BE,KAAM,CAAEO,EAAG,GAAIT,QAAS,GACxB3B,UAAU,2CACVe,QAAUL,GAAIA,EAAEqB,kBAAkB9B,SAAA,EAElCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SAAC,4BACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,eAC5CC,EAAAA,EAAAA,KAAA,SAAOmC,IAAK3E,EAAe8C,MAAO7D,EAAWE,UAAW4D,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEE,UAAU6D,EAAEC,OAAOH,SAASR,UAAS,sCAAAgB,OAAwCxD,EAAOX,UAAU,iBAAiB,mBAAqB+D,YAAY,wBAAwB,iBAAgBpD,EAAOX,UAAW,mBAAkBW,EAAOX,UAAU,gBAAWyF,IAC5V9E,EAAOX,YAAaqD,EAAAA,EAAAA,KAAA,KAAG5B,GAAG,WAAW0B,UAAU,4BAA2BC,SAAEzC,EAAOX,gBAEtFkD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,cAC5CC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,SAAS/B,MAAO7D,EAAWG,SAAU2D,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEG,SAAS0F,OAAO9B,EAAEC,OAAOH,UAAUR,UAAS,sCAAAgB,OAAwCxD,EAAOV,SAAS,iBAAiB,mBAAqB,iBAAgBU,EAAOV,SAAU,mBAAkBU,EAAOV,SAAS,eAAUwF,IACpT9E,EAAOV,WAAYoD,EAAAA,EAAAA,KAAA,KAAG5B,GAAG,UAAU0B,UAAU,4BAA2BC,SAAEzC,EAAOV,eAEpFiD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,kBAC5CC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,SAAS/B,MAAO7D,EAAWY,OAAQkD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEY,OAAOiF,OAAO9B,EAAEC,OAAOH,UAAUR,UAAS,sCAAAgB,OAAwCxD,EAAOD,OAAO,iBAAiB,mBAAqB,iBAAgBC,EAAOD,OAAQ,mBAAkBC,EAAOD,OAAO,eAAU+E,IAC1S9E,EAAOD,SAAU2C,EAAAA,EAAAA,KAAA,KAAG5B,GAAG,UAAU0B,UAAU,4BAA2BC,SAAEzC,EAAOD,gBAGpFwC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,aAC5CC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,SAAS/B,MAAO7D,EAAWI,OAAQ0D,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEI,OAAOyF,OAAO9B,EAAEC,OAAOH,UAAUR,UAAS,sCAAAgB,OAAwCxD,EAAOiF,IAAI,iBAAiB,mBAAqB,iBAAgBjF,EAAOiF,UAExP1C,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,aAC5CC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,SAAS/B,MAAO7D,EAAWK,OAAQyD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEK,OAAOwF,OAAO9B,EAAEC,OAAOH,UAAUR,UAAS,sCAAAgB,OAAwCxD,EAAOiF,IAAI,iBAAiB,mBAAqB,iBAAgBjF,EAAOiF,UAExP1C,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,YAC5CF,EAAAA,EAAAA,MAAA,UAAQS,MAAO7D,EAAWM,OAAQwD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEM,OAAOyD,EAAEC,OAAOH,SAASR,UAAU,qDAAoDC,SAAA,EACpKC,EAAAA,EAAAA,KAAA,UAAQM,MAAM,MAAKP,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQM,MAAM,OAAMP,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQM,MAAM,SAAQP,SAAC,qBAI7BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,iCAC5CC,EAAAA,EAAAA,KAAA,SAAOM,MAAO7D,EAAWO,UAAWuD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEO,UAAUwD,EAAEC,OAAOH,SAASR,UAAU,qDAAqDY,YAAY,uCAE1Lb,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,gBAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,4CAA2CC,SAAA,EAACC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,WAAWG,QAAS/F,EAAWQ,WAAWC,QAASqD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEQ,YAAUmE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK3E,EAAWQ,YAAU,IAAEC,QAAQsD,EAAEC,OAAO+B,gBAAcxC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBACpPF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,4CAA2CC,SAAA,EAACC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,WAAWG,QAAS/F,EAAWQ,WAAWE,IAAKoD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEQ,YAAUmE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK3E,EAAWQ,YAAU,IAAEE,IAAIqD,EAAEC,OAAO+B,gBAAcxC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAC5OF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,4CAA2CC,SAAA,EAACC,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,WAAWG,QAAS/F,EAAWQ,WAAWG,MAAOmD,SAAWC,GAAI9D,GAAa0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG3E,GAAU,IAAEQ,YAAUmE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK3E,EAAWQ,YAAU,IAAEG,MAAMoD,EAAEC,OAAO+B,gBAAcxC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBAGpPC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA2BC,SAAC,uFAC3CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAQa,QAASA,IAAIrE,GAAc,GAAQsD,UAAU,mDAAkDC,SAAC,YACxGC,EAAAA,EAAAA,KAAA,UAAQa,QAASA,KAAM,IAlStB4B,MACf,MAAMjC,EAAI,CAAC,EAMX,OALK/D,EAAWE,UAAUmC,SAAQ0B,EAAE7D,UAAY,2BAC3CF,EAAWG,UAAYH,EAAWG,SAAW,OAAK4D,EAAE5D,SAAW,sBAC/DH,EAAWY,QAAUZ,EAAWY,OAAS,OAAMmD,EAAEnD,OAAS,sBAC3DZ,EAAWI,OAAS,GAAKJ,EAAWK,OAASL,EAAWI,UAAQ2D,EAAE+B,IAAM,qBAC5EhF,EAAUiD,GACuB,IAA1BkC,OAAOC,KAAKnC,GAAGO,QA2RmB0B,GAAY,OAAQ,MAAMpE,EAAO5B,EAAWE,UAAS,WAAAmE,OAAcrE,EAAWE,WAAc,iBAAwB2B,EAAQgE,OAAO7F,EAAWY,SAAS,EAAS2D,EAAQ,CAAE5C,GAAIwE,KAAKC,MAAOxE,OAAMzB,SAAUH,EAAWG,SAAU0B,QAAOE,KAAM,gBAAwB,OAAhBrC,QAAgB,IAAhBA,GAAAA,EAAmB6E,GAAUxE,GAAc,IAAWsD,UAAU,gDAA+CC,SAAC,yBAS3YC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EACpEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,uBAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,UAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAA+BC,SAAC,+B","sources":["components/PharmaViewScreen.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst PharmaViewScreen = ({ onRequestDataset }) => {\r\n  const [showConfirmation, setShowConfirmation] = useState(null);\r\n  const [showCustom, setShowCustom] = useState(false);\r\n  const [customForm, setCustomForm] = useState({\r\n    condition: '',\r\n    patients: 1000,\r\n    ageMin: 18,\r\n    ageMax: 80,\r\n    gender: 'any',\r\n    locations: '',\r\n    modalities: { imaging: true, lab: true, notes: false },\r\n    budget: 50000\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const firstFieldRef = useRef(null);\r\n  const [query, setQuery] = useState('');\r\n  const [category, setCategory] = useState('all');\r\n  const [sortBy, setSortBy] = useState('patients'); // patients | price\r\n\r\n  useEffect(() => {\r\n    if (showCustom && firstFieldRef.current) {\r\n      firstFieldRef.current.focus();\r\n    }\r\n  }, [showCustom]);\r\n\r\n  const categories = ['all', 'Cancer Research', 'Cardiovascular', 'Genetics'];\r\n\r\n  const validate = () => {\r\n    const e = {};\r\n    if (!customForm.condition.trim()) e.condition = 'Condition is required';\r\n    if (!customForm.patients || customForm.patients < 100) e.patients = 'Min 100 patients';\r\n    if (!customForm.budget || customForm.budget < 1000) e.budget = 'Min $1,000 budget';\r\n    if (customForm.ageMin < 0 || customForm.ageMax < customForm.ageMin) e.age = 'Age range invalid';\r\n    setErrors(e);\r\n    return Object.keys(e).length === 0;\r\n  };\r\n\r\n  const datasets = [\r\n    {\r\n      id: 1,\r\n      name: 'Oncology Dataset',\r\n      patients: 50000,\r\n      price: 250000,\r\n      description: 'Comprehensive cancer research data with treatment outcomes',\r\n      category: 'Cancer Research',\r\n      icon: '🎗️'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Cardiology Dataset',\r\n      patients: 30000,\r\n      price: 180000,\r\n      description: 'Heart disease patterns and treatment effectiveness',\r\n      category: 'Cardiovascular',\r\n      icon: '❤️'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Rare Diseases',\r\n      patients: 5000,\r\n      price: 75000,\r\n      description: 'Specialized data for rare genetic conditions',\r\n      category: 'Genetics',\r\n      icon: '🧬'\r\n    }\r\n  ];\r\n\r\n  const visibleDatasets = useMemo(() => {\r\n    let list = datasets;\r\n    if (category !== 'all') list = list.filter(d => d.category === category);\r\n    if (query.trim()) {\r\n      const q = query.toLowerCase();\r\n      list = list.filter(d => d.name.toLowerCase().includes(q) || d.category.toLowerCase().includes(q));\r\n    }\r\n    list = [...list].sort((a,b) => {\r\n      if (sortBy === 'patients') return b.patients - a.patients;\r\n      if (sortBy === 'price') return b.price - a.price;\r\n      return 0;\r\n    });\r\n    return list;\r\n  }, [query, category, sortBy]);\r\n\r\n  const handleRequestDataset = (dataset) => {\r\n    setShowConfirmation(dataset);\r\n  };\r\n\r\n  const handleConfirmRequest = () => {\r\n    if (showConfirmation) {\r\n      onRequestDataset?.(showConfirmation);\r\n    }\r\n    setShowConfirmation(null);\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(price);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white pb-24 max-w-mobile mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"px-4 py-4\">\r\n        <h1 className=\"text-lg font-semibold text-gray-900\">Marketplace</h1>\r\n        <p className=\"text-xs text-gray-500 mt-1\">Search, filter, and request de-identified cohorts</p>\r\n      </div>\r\n\r\n\r\n      {/* Controls */}\r\n      <div className=\"px-4 mb-3\" style={{ position: 'sticky', top: 64, zIndex: 20, background: 'white', boxShadow: '0 1px 0 rgba(0,0,0,0.06)' }}>\r\n        <input\r\n          value={query}\r\n          onChange={(e)=>{ setQuery(e.target.value); }}\r\n          placeholder=\"Search datasets…\"\r\n          className=\"w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n        />\r\n        <div className=\"flex items-center space-x-2 mt-2 text-xs\">\r\n          {categories.map(cat => (\r\n            <button key={cat} onClick={()=>setCategory(cat)} className={`px-2 py-1 rounded ${category===cat?'bg-blue-100 text-blue-700':'bg-gray-100 text-gray-600'}`}>{cat}</button>\r\n          ))}\r\n          <div className=\"ml-auto flex items-center space-x-1\">\r\n            <span className=\"text-gray-500\">Sort</span>\r\n            <select value={sortBy} onChange={(e)=>setSortBy(e.target.value)} className=\"px-2 py-1 rounded bg-gray-100\">\r\n              <option value=\"patients\">Patients</option>\r\n              <option value=\"price\">Price</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-[11px] text-gray-500 mt-1\">{visibleDatasets.length} datasets</div>\r\n      </div>\r\n\r\n      {/* Datasets List */}\r\n      <div className=\"px-6\">\r\n        <div className=\"space-y-2\">\r\n          {visibleDatasets.length === 0 && (\r\n            <div className=\"bg-gray-50 rounded-xl p-6 text-center border border-dashed border-gray-200\">\r\n              <div className=\"text-3xl mb-2\">🔍</div>\r\n              <p className=\"text-sm text-gray-700 mb-3\">No datasets match your filters.</p>\r\n              <button onClick={()=>setShowCustom(true)} className=\"px-3 py-2 rounded-lg bg-blue-600 text-white text-sm\">Create Custom Request</button>\r\n            </div>\r\n          )}\r\n          {visibleDatasets.map((dataset, index) => (\r\n            <div\r\n              key={dataset.id}\r\n              className=\"flex items-center justify-between p-4 card-neo accent-left\"\r\n            >\r\n              <div className=\"flex items-center space-x-3\">\r\n                <span className=\"icon-pill text-base\">{dataset.icon}</span>\r\n                <div>\r\n                  <p className=\"font-medium text-gray-900\">{dataset.name}</p>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <p className=\"text-sm text-gray-600\">{dataset.patients.toLocaleString()} patients</p>\r\n                    <span className=\"px-2 py-0.5 rounded-full bg-gray-100 text-gray-600 text-[10px]\">{dataset.category}</span>\r\n                  </div>\r\n                  {dataset.description && (\r\n                    <p className=\"text-xs text-gray-500 mt-1\">{dataset.description}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className=\"text-sm font-semibold text-blue-600\">{formatPrice(dataset.price)}</span>\r\n                    <button\r\n                      onClick={() => handleRequestDataset(dataset)}\r\n                      className=\"px-3 py-1 rounded-lg bg-blue-50 text-blue-700 text-xs hover:bg-blue-100\"\r\n                    >\r\n                      Request\r\n                    </button>\r\n                    <button\r\n                      onClick={() => onRequestDataset?.({ ...dataset, price: 20 })}\r\n                      className=\"px-3 py-1 rounded-lg bg-green-50 text-green-700 text-xs hover:bg-green-100\"\r\n                    >\r\n                      Buy Sample Slice\r\n                    </button>\r\n                  </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Custom Request CTA */}\r\n      <div className=\"px-6 mt-4\">\r\n        <div className=\"bg-gray-50 rounded-xl p-4 border border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"font-medium text-gray-900\">Need a specific cohort?</h3>\r\n              <p className=\"text-sm text-gray-600\">Request by condition, cohort size, and location.</p>\r\n            </div>\r\n            <button onClick={()=>setShowCustom(true)} className=\"px-3 py-2 rounded-lg bg-blue-600 text-white text-sm\">Custom Request</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* Confirmation Modal */}\r\n      <AnimatePresence>\r\n        {showConfirmation && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\"\r\n            onClick={() => setShowConfirmation(null)}\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.9, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.9, opacity: 0 }}\r\n              className=\"bg-white rounded-2xl p-6 max-w-sm w-full\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <div className=\"text-center\">\r\n                <div className=\"w-16 h-16 bg-trust-blue/10 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <span className=\"text-2xl\">{showConfirmation.icon}</span>\r\n                </div>\r\n                <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Request Dataset</h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  You're requesting access to <strong>{showConfirmation.name}</strong> for {formatPrice(showConfirmation.price)}.\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 mb-6\">\r\n                  Our team will review your request and get back to you within 2-3 business days.\r\n                </p>\r\n                \r\n                <div className=\"flex space-x-3\">\r\n                  <motion.button\r\n                    whileTap={{ scale: 0.95 }}\r\n                    onClick={() => setShowConfirmation(null)}\r\n                    className=\"flex-1 py-3 px-4 border border-gray-300 rounded-lg text-gray-700 font-medium hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </motion.button>\r\n                  <motion.button\r\n                    whileTap={{ scale: 0.95 }}\r\n                    onClick={handleConfirmRequest}\r\n                    className=\"flex-1 py-3 px-4 bg-trust-blue text-white rounded-lg font-medium hover:bg-blue-700 transition-colors\"\r\n                  >\r\n                    Submit Request\r\n                  </motion.button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Custom Request Modal */}\r\n      <AnimatePresence>\r\n        {showCustom && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\"\r\n            onClick={()=>setShowCustom(false)}\r\n            role=\"dialog\" aria-modal=\"true\"\r\n          >\r\n            <motion.div\r\n              initial={{ y: 50, opacity: 0 }}\r\n              animate={{ y: 0, opacity: 1 }}\r\n              exit={{ y: 50, opacity: 0 }}\r\n              className=\"bg-white rounded-2xl p-5 max-w-sm w-full\"\r\n              onClick={(e)=>e.stopPropagation()}\r\n            >\r\n              <h3 className=\"text-lg font-bold text-gray-900 mb-3\">Custom Dataset Request</h3>\r\n              <div className=\"space-y-3 text-sm\">\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1\">Condition</label>\r\n                  <input ref={firstFieldRef} value={customForm.condition} onChange={(e)=>setCustomForm({...customForm, condition:e.target.value})} className={`w-full px-3 py-2 border rounded-lg ${errors.condition?'border-red-500':'border-gray-300'}`} placeholder=\"e.g., Type 2 Diabetes\" aria-invalid={!!errors.condition} aria-describedby={errors.condition?'cond-err':undefined} />\r\n                  {errors.condition && <p id=\"cond-err\" className=\"text-xs text-red-600 mt-1\">{errors.condition}</p>}\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <label className=\"block text-gray-700 mb-1\">Patients</label>\r\n                    <input type=\"number\" value={customForm.patients} onChange={(e)=>setCustomForm({...customForm, patients:Number(e.target.value)})} className={`w-full px-3 py-2 border rounded-lg ${errors.patients?'border-red-500':'border-gray-300'}`} aria-invalid={!!errors.patients} aria-describedby={errors.patients?'pat-err':undefined} />\r\n                    {errors.patients && <p id=\"pat-err\" className=\"text-xs text-red-600 mt-1\">{errors.patients}</p>}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-gray-700 mb-1\">Budget (USD)</label>\r\n                    <input type=\"number\" value={customForm.budget} onChange={(e)=>setCustomForm({...customForm, budget:Number(e.target.value)})} className={`w-full px-3 py-2 border rounded-lg ${errors.budget?'border-red-500':'border-gray-300'}`} aria-invalid={!!errors.budget} aria-describedby={errors.budget?'bud-err':undefined} />\r\n                    {errors.budget && <p id=\"bud-err\" className=\"text-xs text-red-600 mt-1\">{errors.budget}</p>}\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 gap-2\">\r\n                  <div>\r\n                    <label className=\"block text-gray-700 mb-1\">Age Min</label>\r\n                    <input type=\"number\" value={customForm.ageMin} onChange={(e)=>setCustomForm({...customForm, ageMin:Number(e.target.value)})} className={`w-full px-3 py-2 border rounded-lg ${errors.age?'border-red-500':'border-gray-300'}`} aria-invalid={!!errors.age} />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-gray-700 mb-1\">Age Max</label>\r\n                    <input type=\"number\" value={customForm.ageMax} onChange={(e)=>setCustomForm({...customForm, ageMax:Number(e.target.value)})} className={`w-full px-3 py-2 border rounded-lg ${errors.age?'border-red-500':'border-gray-300'}`} aria-invalid={!!errors.age} />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-gray-700 mb-1\">Gender</label>\r\n                    <select value={customForm.gender} onChange={(e)=>setCustomForm({...customForm, gender:e.target.value})} className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\">\r\n                      <option value=\"any\">Any</option>\r\n                      <option value=\"male\">Male</option>\r\n                      <option value=\"female\">Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1\">Locations (comma-separated)</label>\r\n                  <input value={customForm.locations} onChange={(e)=>setCustomForm({...customForm, locations:e.target.value})} className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\" placeholder=\"e.g., California, Texas, India\" />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-gray-700 mb-1\">Modalities</label>\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <label className=\"flex items-center space-x-1 text-gray-700\"><input type=\"checkbox\" checked={customForm.modalities.imaging} onChange={(e)=>setCustomForm({...customForm, modalities:{...customForm.modalities, imaging:e.target.checked}})} /><span>Imaging</span></label>\r\n                    <label className=\"flex items-center space-x-1 text-gray-700\"><input type=\"checkbox\" checked={customForm.modalities.lab} onChange={(e)=>setCustomForm({...customForm, modalities:{...customForm.modalities, lab:e.target.checked}})} /><span>Lab</span></label>\r\n                    <label className=\"flex items-center space-x-1 text-gray-700\"><input type=\"checkbox\" checked={customForm.modalities.notes} onChange={(e)=>setCustomForm({...customForm, modalities:{...customForm.modalities, notes:e.target.checked}})} /><span>Notes</span></label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500\">We de-identify to HIPAA Safe Harbor and normalize to FHIR/DICOM where applicable.</div>\r\n                <div className=\"flex space-x-2 pt-1\">\r\n                  <button onClick={()=>setShowCustom(false)} className=\"flex-1 py-2 rounded-lg bg-gray-200 text-gray-800\">Cancel</button>\r\n                  <button onClick={()=>{ if(!validate()) return; const name = customForm.condition ? `Custom: ${customForm.condition}` : 'Custom Request'; const price = Number(customForm.budget)||0; const dataset={ id: Date.now(), name, patients: customForm.patients, price, icon: '🧬' }; onRequestDataset?.(dataset); setShowCustom(false); }} className=\"flex-1 py-2 rounded-lg bg-blue-600 text-white\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Trust badges */}\r\n      <div className=\"px-6 mt-4\">\r\n        <div className=\"flex items-center space-x-2 text-[10px] text-gray-600\">\r\n          <span className=\"px-2 py-1 rounded bg-gray-100\">HIPAA Safe Harbor</span>\r\n          <span className=\"px-2 py-1 rounded bg-gray-100\">GDPR</span>\r\n          <span className=\"px-2 py-1 rounded bg-gray-100\">Zero Data Training</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PharmaViewScreen;\r\n"],"names":["_ref","onRequestDataset","showConfirmation","setShowConfirmation","useState","showCustom","setShowCustom","customForm","setCustomForm","condition","patients","ageMin","ageMax","gender","locations","modalities","imaging","lab","notes","budget","errors","setErrors","firstFieldRef","useRef","query","setQuery","category","setCategory","sortBy","setSortBy","useEffect","current","focus","datasets","id","name","price","description","icon","visibleDatasets","useMemo","list","filter","d","trim","q","toLowerCase","includes","sort","a","b","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","_jsxs","className","children","_jsx","position","top","zIndex","background","boxShadow","value","onChange","e","target","placeholder","map","cat","onClick","concat","length","dataset","index","toLocaleString","handleRequestDataset","_objectSpread","AnimatePresence","motion","div","initial","opacity","animate","exit","scale","stopPropagation","button","whileTap","handleConfirmRequest","role","y","ref","undefined","type","Number","age","checked","validate","Object","keys","Date","now"],"sourceRoot":""}